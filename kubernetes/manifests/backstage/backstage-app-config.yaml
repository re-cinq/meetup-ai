apiVersion: v1
kind: ConfigMap
metadata:
  name: backstage-app-config
  namespace: backstage
data:
  app-config.yaml: |
    # Force database reset and reindexing
    catalog:
      database:
        resetOnStartup: true  # Make sure this is enabled
      processingInterval:
        milliseconds: 10000  # Process more frequently
      rules:
        - allow: [Component, API, Resource, Location, System, Domain, User, Group, Template]
      locations:
        - type: url
          target: https://github.com/re-cinq/meetup-ai/blob/main/backstage/templates/ml-model-template.yaml
          rules:
            - allow: [Template]
      providers:
        backstageOpenapi:
          plugins:
            - catalog
            - scaffolder
            - permission
        file:
          bootstrap: true
          bootstrapPath: /app/examples
        - type: file
          target: /app/examples/entities.yaml
        - type: url
          target: https://github.com/re-cinq/meetup-ai/blob/main/backstage/templates/ml-model-template.yaml
      rules:
        allow: [Component, System, API, Resource, Location, Template, Group, User]
    backend:
      baseUrl: http://backstage.backstage.svc.cluster.local:7007
      logging:
        level: info
    # Configure scaffolder with explicit debug mode
    scaffolder:
      frontend:
        filterTemplatesOnUserEntities: false  # DO NOT filter templates based on ownership
        templateFilter: false  # Show all templates
      log:
        level: info
      actions:
        enabled: true
      defaultActions: true
      # Registry with FIXED URLs and direct templates ONLY
      registry:
        templates:
          # Only include your direct template for testing
          - apiVersion: scaffolder.backstage.io/v1beta3
            kind: Template
            metadata:
              name: direct-ml-model
              title: ML Model Template
              description: Deploy a machine learning model
              tags:
                - recommended
                - ai
                - gpu
            spec:
              owner: development/default-team
              type: service
              parameters:
                - title: Provide Information
                  required:
                    - name
                  properties:
                    name:
                      title: Name
                      type: string
                      description: Unique name for the model
              steps:
                - id: log
                  name: Log
                  action: debug:log
                  input:
                    message: Creating ${{ parameters.name }}
          - apiVersion: scaffolder.backstage.io/v1beta3
            kind: Template
            metadata:
              name: simple-test-template
              title: Test Template
              description: Simple test template
            spec:
              steps:
                - id: log
                  name: Log
                  action: debug:log
                  input:
                    message: "Test message"
    
    # App config with debugging enabled
    app:
      title: AI Platform
      baseUrl: http://backstage.backstage.svc.cluster.local:7007
      frontend:
        debugEnabled: true

    # Add this authentication configuration to the app-config.yaml
    auth:
      environment: development
      providers: 
        guest:
          enabled: true
      # Disable token verification in development
      keys:
        development:
          skipKeyStoreCheck: true
      allowGuestAccess: true
    
    # TechDocs configuration (required at root level)
    techdocs:
      builder: local
      generator:
        runIn: docker
      publisher:
        type: local
    
    # Enable events plugin
    events:
      backend:
        enabled: true
    
    # Kubernetes integration
    kubernetes:
      serviceLocatorMethod:
        type: 'multiTenant'
      clusterLocatorMethods:
        - type: 'config'
          clusters:
            - name: ai-platform-cluster
              serviceAccountToken: ${K8S_SERVICE_ACCOUNT_TOKEN}
              url: ${K8S_CLUSTER_URL}
              skipTLSVerify: false
              authProvider: 'serviceAccount'
              skipMetricsLookup: true
        - clusters:
            - authProvider: serviceAccount
              skipMetricsLookup: true
    cache:
      refreshIntervalSeconds: 5
