apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: backstage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
    spec:
      serviceAccountName: backstage-k8s-reader
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: backstage
        image: ghcr.io/backstage/backstage:latest
        ports:
        - containerPort: 7007
        env:
        - name: K8S_CLUSTER_URL
          value: "https://kubernetes.default.svc.cluster.local"
        - name: NODE_ENV
          value: development
        # Database configuration
        - name: POSTGRES_HOST
          value: "backstage-postgres"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: "backstage"
        - name: POSTGRES_PASSWORD
          value: "backstage"
        - name: BACKSTAGE_APP_CONFIG_backend_database_client
          value: "pg"
        - name: BACKSTAGE_APP_CONFIG_backend_database_connection_host
          value: "backstage-postgres"
        - name: BACKSTAGE_APP_CONFIG_backend_database_connection_port
          value: "5432"
        - name: BACKSTAGE_APP_CONFIG_backend_database_connection_user
          value: "backstage"
        - name: BACKSTAGE_APP_CONFIG_backend_database_connection_password
          value: "backstage"
        - name: BACKSTAGE_APP_CONFIG_backend_database_connection_database
          value: "backstage"
        # Auth configuration
        - name: BACKSTAGE_APP_CONFIG_auth_providers_guest_enabled
          value: "true"
        - name: BACKSTAGE_APP_CONFIG_auth_allowGuestAccess
          value: "true"
        # App configuration
        - name: BACKSTAGE_APP_CONFIG_app_title
          value: "ML Platform"
        # Catalog configuration - SIMPLIFIED
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_0_type
          value: "file"
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_0_target
          value: "/app/examples/entities.yaml"
        - name: BACKSTAGE_APP_CONFIG_catalog_providers_file_bootstrap
          value: "true"
        - name: BACKSTAGE_APP_CONFIG_catalog_providers_file_bootstrapPath
          value: "/app/examples"
        - name: BACKSTAGE_APP_CONFIG_catalog_rules_allow
          value: "[Component, System, API, Resource, Location, Template, Group, User]"
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_0_rules_0_allow
          value: "[Component, System, API, Resource, Location, Template, Group, User]"
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_1_rules_0_allow
          value: "[Component, System, API, Resource, Location, Template, Group, User]"
        # Added to clearly specify the location rules
        - name: BACKSTAGE_APP_CONFIG_catalog_rules_allow_0
          value: "[Component, System, API, Resource, Location, Template, Group, User]"
        # Reset database on startup to clear any stale entities
        - name: BACKSTAGE_APP_CONFIG_catalog_database_resetOnStartup
          value: "true"
        # Debug options
        - name: BACKSTAGE_APP_CONFIG_backend_logging_level
          value: "debug"
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_1_type
          value: "file"
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_1_target
          value: "/app/examples/templates.yaml"
        # Make sure guest auth is properly enabled
        - name: BACKSTAGE_APP_CONFIG_auth_environment
          value: "development"
        - name: BACKSTAGE_APP_CONFIG_backend_log_level
          value: "debug"
        - name: BACKSTAGE_APP_CONFIG_catalog_processingInterval
          value: "10" # Process catalog items more frequently (seconds)
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: backstage-secrets
              key: github-token
        # Add this as a new environment variable
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_2_type
          value: "url"
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_2_target
          value: "https://raw.githubusercontent.com/re-cinq/meetup-ai/main/backstage/templates/ml-model-template.yaml"
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_2_rules_0_allow
          value: "[Template]"
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_2_auth_token
          value: "${GITHUB_TOKEN}"
        # Add these environment variables after your existing ones
        - name: BACKSTAGE_APP_CONFIG_techdocs_builder
          value: "local"
        - name: BACKSTAGE_APP_CONFIG_techdocs_generator_runIn
          value: "docker"
        - name: BACKSTAGE_APP_CONFIG_techdocs_publisher_type
          value: "local"
        # Fix the Kubernetes auth provider
        - name: BACKSTAGE_APP_CONFIG_kubernetes_clusterLocatorMethods_0_clusters_0_authProvider
          value: "serviceAccount"
        - name: BACKSTAGE_APP_CONFIG_kubernetes_clusterLocatorMethods_0_clusters_0_skipMetricsLookup
          value: "true"
        # Add this environment variable
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_3_type
          value: "file"
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_3_target
          value: "/app/templates/ml-model-template.yaml"
        - name: BACKSTAGE_APP_CONFIG_catalog_locations_3_rules_0_allow
          value: "[Template]"
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
          requests:
            memory: "512Mi"
            cpu: "250m"
        volumeMounts:
        - name: entities
          mountPath: /app/examples/entities.yaml
          subPath: entities.yaml
        - name: templates
          mountPath: /app/examples/templates.yaml
          subPath: templates.yaml
        - name: backstage-app-config
          mountPath: /app/app-config.yaml
          subPath: app-config.yaml
        - name: ml-model-template
          mountPath: /app/templates/ml-model-template.yaml
          subPath: ml-model-template.yaml
        - name: template-folder
          mountPath: /app/examples/template/ml-model-template.yaml
          subPath: ml-model-template.yaml
      volumes:
      - name: entities
        configMap:
          name: backstage-entities
      - name: templates
        configMap:
          name: backstage-templates
      - name: backstage-app-config
        configMap:
          name: backstage-app-config
      - name: ml-model-template
        configMap:
          name: ml-model-template
      - name: template-folder
        configMap:
          name: backstage-template-folder
